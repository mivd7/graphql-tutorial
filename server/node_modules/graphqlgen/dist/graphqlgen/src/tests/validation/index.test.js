"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var validation_1 = require("../../validation");
var path_1 = require("path");
var relative = function (p) { return path_1.join(__dirname, p); };
var language = 'typescript';
test('invalid syntax', function () {
    var definition = './src/toto.ts::ModelName';
    var validation = validation_1.validateDefinition('User', definition, language);
    expect(validation).toMatchObject({
        validSyntax: false,
        fileExists: false,
        interfaceExists: false,
        definition: {
            rawDefinition: definition,
        },
    });
});
test('invalid path', function () {
    var definition = './src/toto.ts:ModelName';
    var validation = validation_1.validateDefinition('User', definition, language);
    expect(validation).toMatchObject({
        validSyntax: true,
        fileExists: false,
        interfaceExists: false,
        definition: {
            rawDefinition: definition,
        },
    });
});
test('invalid interface name', function () {
    var filePath = relative('../fixtures/basic/index.ts');
    var definition = filePath + ":ModelName";
    var validation = validation_1.validateDefinition('User', definition, language);
    expect(validation).toMatchObject({
        validSyntax: true,
        fileExists: true,
        interfaceExists: false,
        definition: {
            rawDefinition: definition,
        },
    });
});
test('invalid interface name', function () {
    var filePath = relative('../fixtures/basic/index.ts');
    var definition = filePath + ":Number";
    var validation = validation_1.validateDefinition('User', definition, language);
    expect(validation).toMatchObject({
        validSyntax: true,
        fileExists: true,
        interfaceExists: true,
        definition: {
            rawDefinition: definition,
            filePath: filePath,
            typeName: 'User',
            modelName: 'Number',
        },
    });
});
//# sourceMappingURL=index.test.js.map